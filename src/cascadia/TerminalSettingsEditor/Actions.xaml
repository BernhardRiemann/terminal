<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under
the MIT License. See LICENSE in the project root for license information. -->
<Page
    x:Class="Microsoft.Terminal.Settings.Editor.Actions"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Microsoft.Terminal.Settings.Editor"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:SettingsModel="using:Microsoft.Terminal.Settings.Model"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="CommonResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <local:StringIsEmptyConverter x:Key="CommandKeyChordVisibilityConverter"/>

            <DataTemplate x:Key="GeneralItemTemplate" x:DataType="SettingsModel:Command">

                <!-- This HorizontalContentAlignment="Stretch" is important
                        to make sure it takes the entire width of the line -->
                <ListViewItem HorizontalContentAlignment="Stretch"
                              AutomationProperties.Name="{x:Bind Name, Mode=OneWay}"
                              AutomationProperties.AcceleratorKey="{x:Bind KeyChordText, Mode=OneWay}">

                    <Grid HorizontalAlignment="Stretch" ColumnSpacing="8" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <!-- icon -->
                            <ColumnDefinition Width="Auto"/>
                            <!-- command label -->
                            <ColumnDefinition Width="*"/>
                            <!-- key chord -->
                            <ColumnDefinition Width="16"/>
                            <!-- gutter for scrollbar -->
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="1"
                                   HorizontalAlignment="Left"
                                   Text="{x:Bind Name, Mode=OneWay}"/>

                        <!-- The block for the key chord is only visible
                                when there's actual text set as the label. See
                                CommandKeyChordVisibilityConverter for details.
                             We're setting the accessibility view on the
                                border and text block to Raw because otherwise,
                                Narrator will read out the key chord. Problem is,
                                it already did that because it was the list item's
                                "AcceleratorKey". It's redundant. -->
                        <Border Grid.Column="2"
                                Visibility="{x:Bind KeyChordText,
                                             Mode=OneWay,
                                             Converter={StaticResource CommandKeyChordVisibilityConverter}}"
                                Style="{ThemeResource KeyChordBorderStyle}"
                                Padding="2,0,2,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                AutomationProperties.AccessibilityView="Raw">

                            <TextBlock Style="{ThemeResource KeyChordTextBlockStyle}"
                                       FontSize="12"
                                       Text="{x:Bind KeyChordText, Mode=OneWay}"
                                       AutomationProperties.AccessibilityView="Raw" />
                        </Border>


                    </Grid>
                </ListViewItem>
            </DataTemplate>



            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Dark">
                    <Style x:Key="KeybindingsListStyle" TargetType="ListView">
                        <Setter Property="Background" Value="#333333" />
                    </Style>
                    <!-- TextBox colors !-->
                    <SolidColorBrush x:Key="TextControlBackground" Color="#333333"/>
                    <SolidColorBrush x:Key="TextBoxPlaceholderTextThemeBrush" Color="#B5B5B5"/>
                    <SolidColorBrush x:Key="TextControlForeground" Color="#B5B5B5"/>
                    <SolidColorBrush x:Key="TextControlBorderBrush" Color="#404040"/>
                    <SolidColorBrush x:Key="TextControlButtonForeground" Color="#B5B5B5"/>

                    <SolidColorBrush x:Key="TextControlBackgroundPointerOver" Color="#404040"/>
                    <SolidColorBrush x:Key="TextControlForegroundPointerOver" Color="#FFFFFF"/>
                    <SolidColorBrush x:Key="TextControlBorderBrushPointerOver" Color="#404040"/>
                    <SolidColorBrush x:Key="TextControlButtonForegroundPointerOver" Color="#FF4343"/>

                    <SolidColorBrush x:Key="TextControlBackgroundFocused" Color="#333333"/>
                    <SolidColorBrush x:Key="TextControlForegroundFocused" Color="#FFFFFF"/>
                    <SolidColorBrush x:Key="TextControlBorderBrushFocused" Color="#404040"/>
                    <SolidColorBrush x:Key="TextControlButtonForegroundPressed" Color="#FFFFFF"/>
                    <SolidColorBrush x:Key="TextControlButtonBackgroundPressed" Color="#FF4343"/>

                    <!--  KeyChordText styles  -->
                    <Style x:Key="KeyChordBorderStyle" TargetType="Border">
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="CornerRadius" Value="1" />
                        <Setter Property="Background" Value="{ThemeResource SystemAltMediumLowColor}" />
                        <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
                    </Style>
                    <Style x:Key="KeyChordTextBlockStyle" TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
                    </Style>

                    <!--  ParsedCommandLineText styles  -->
                    <Style x:Key="ParsedCommandLineBorderStyle" TargetType="Border">
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="CornerRadius" Value="1" />
                        <Setter Property="Background" Value="{ThemeResource SystemAltMediumLowColor}" />
                        <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
                    </Style>
                    <Style x:Key="ParsedCommandLineTextBlockStyle" TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
                    </Style>
                </ResourceDictionary>
                <ResourceDictionary x:Key="Light">
                    <Style x:Key="KeybindingsListStyle" TargetType="ListView">
                        <Setter Property="Background" Value="#CCCCCC" />
                    </Style>
                    <!-- TextBox colors !-->
                    <SolidColorBrush x:Key="TextControlBackground" Color="#CCCCCC"/>
                    <SolidColorBrush x:Key="TextBoxPlaceholderTextThemeBrush" Color="#636363"/>
                    <SolidColorBrush x:Key="TextControlBorderBrush" Color="#636363"/>
                    <SolidColorBrush x:Key="TextControlButtonForeground" Color="#636363"/>

                    <SolidColorBrush x:Key="TextControlBackgroundPointerOver" Color="#DADADA"/>
                    <SolidColorBrush x:Key="TextControlBorderBrushPointerOver" Color="#636363"/>
                    <SolidColorBrush x:Key="TextControlButtonForegroundPointerOver" Color="#FF4343"/>

                    <SolidColorBrush x:Key="TextControlBackgroundFocused" Color="#CCCCCC"/>
                    <SolidColorBrush x:Key="TextControlBorderBrushFocused" Color="#636363"/>
                    <SolidColorBrush x:Key="TextControlButtonForegroundPressed" Color="#FFFFFF"/>
                    <SolidColorBrush x:Key="TextControlButtonBackgroundPressed" Color="#FF4343"/>

                    <!--  KeyChordText styles  -->
                    <Style x:Key="KeyChordBorderStyle" TargetType="Border">
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="CornerRadius" Value="1" />
                        <Setter Property="Background" Value="{ThemeResource SystemAltMediumLowColor}" />
                        <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
                    </Style>
                    <Style x:Key="KeyChordTextBlockStyle" TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
                    </Style>

                    <!--  ParsedCommandLineText styles  -->
                    <Style x:Key="ParsedCommandLineBorderStyle" TargetType="Border">
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="CornerRadius" Value="1" />
                        <Setter Property="Background" Value="{ThemeResource SystemAltMediumLowColor}" />
                        <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
                    </Style>
                    <Style x:Key="ParsedCommandLineTextBlockStyle" TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
                    </Style>
                </ResourceDictionary>
                <ResourceDictionary x:Key="HighContrast">
                    <Style x:Key="KeybindingsListStyle" TargetType="ListView">
                        <Setter Property="Background" Value="{ThemeResource SystemColorWindowColor}" />
                    </Style>

                    <!--  KeyChordText styles (use XAML defaults for High Contrast theme) -->
                    <Style x:Key="KeyChordBorderStyle" TargetType="Border"/>
                    <Style x:Key="KeyChordTextBlockStyle" TargetType="TextBlock"/>

                    <!--  ParsedCommandLineText styles (use XAML defaults for High Contrast theme) -->
                    <Style x:Key="ParsedCommandLineBorderStyle" TargetType="Border"/>
                    <Style x:Key="ParsedCommandLineTextBlockStyle" TargetType="TextBlock"/>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>


        </ResourceDictionary>
    </Page.Resources>

    <ScrollViewer>
        <StackPanel>
            <StackPanel Style="{StaticResource SettingsStackStyle}">
            <TextBlock x:Uid="Globals_KeybindingsDisclaimer"
                       Style="{StaticResource DisclaimerStyle}"/>
            <TextBlock x:Uid="Globals_KeybindingsLink"/>
                <!-- Keybindings -->
                <local:SettingContainer x:Uid="Globals_Keybindings">

                    <ListView Style="{ThemeResource KeybindingsListStyle}"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              SelectionMode="Single"
                              CanReorderItems="False"
                              AllowDrop="False"
                              ItemsSource="{x:Bind FilteredActions}"
                              ItemTemplate="{StaticResource GeneralItemTemplate}">
                    </ListView>

                </local:SettingContainer>

            </StackPanel>

        </StackPanel>
    </ScrollViewer>
</Page>
